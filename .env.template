# Environment Configuration Template
# Copy to .env and configure with your secrets
#
# SECURITY MODEL:
# - OP_SERVICE_ACCOUNT_TOKEN: Only plaintext secret (bootstrap credential)
# - All other secrets: Can use 1Password references (op://vault/item/field) OR plaintext
# - 1Password references are resolved at runtime via Service Account
# - No secrets committed to git (.env is in .gitignore)

# =============================================================================
# 1Password Service Account (REQUIRED - Bootstrap Secret)
# =============================================================================
# Create via: https://developer.1password.com/docs/service-accounts/
# Scope: Read access to MCP Orchestrator vault (NOT CLI vault)
# Item: 1password.service-account.mcp-orchestrator
# Format: ops_ey...
#
# NOTE: This is SEPARATE from CLI service account (different vault access)
OP_SERVICE_ACCOUNT_TOKEN=ops_ey...

# =============================================================================
# Notion API
# =============================================================================
# Create integration: https://www.notion.so/my-integrations
# Grant access to target workspace and databases
#
# 1Password item: notion.api-key.mcp-orchestrator (in MCP Orchestrator vault)
# Option 1: 1Password reference (recommended)
# NOTION_API_KEY=op://MCP Orchestrator/notion.api-key.mcp-orchestrator/credential
#
# Option 2: Direct token (less secure, not recommended)
# NOTION_API_KEY=secret_...
NOTION_API_KEY=op://MCP Orchestrator/notion.api-key.mcp-orchestrator/credential
NOTION_TASKS_DATABASE_ID=
NOTION_RESEARCH_DATABASE_ID=
NOTION_COMPLETIONS_DATABASE_ID=

# =============================================================================
# Todoist API
# =============================================================================
# Get token: https://todoist.com/prefs/integrations
# Requires: Premium plan for Google Calendar sync
#
# 1Password item: todoist.api-token.mcp-orchestrator (in MCP Orchestrator vault)
# Option 1: 1Password reference (recommended)
# TODOIST_API_TOKEN=op://MCP Orchestrator/todoist.api-token.mcp-orchestrator/credential
#
# Option 2: Direct token (less secure, not recommended)
# TODOIST_API_TOKEN=abc123...
TODOIST_API_TOKEN=op://MCP Orchestrator/todoist.api-token.mcp-orchestrator/credential
TODOIST_WEBHOOK_SECRET=

# =============================================================================
# GitHub
# =============================================================================
# Create PAT: https://github.com/settings/tokens
# Scopes: repo, workflow, read:org (for Copilot Agents API)
#
# 1Password item: github.personal-access-token.mcp-orchestrator (in MCP Orchestrator vault)
# Option 1: 1Password reference (recommended)
# GITHUB_PAT=op://MCP Orchestrator/github.personal-access-token.mcp-orchestrator/credential
#
# Option 2: Direct token (less secure, not recommended)
# GITHUB_PAT=ghp_...
GITHUB_PAT=op://MCP Orchestrator/github.personal-access-token.mcp-orchestrator/credential
GITHUB_WEBHOOK_SECRET=

# =============================================================================
# OpenAI API (Optional - for AI auto-tagging)
# =============================================================================
# Get API key: https://platform.openai.com/api-keys
# Free accounts need $5 prepaid credit: https://platform.openai.com/settings/organization/billing
# Cost: ~$0.20-0.30/month for light automation (GPT-4o-mini)
#
# 1Password item: openai.api-key.mcp-orchestrator (in MCP Orchestrator vault)
# Used by: n8n workflows, auto-tagger agent, task grouper agent
# Models: GPT-4 or GPT-4o-mini (configurable)
#
# NOTE: This is SEPARATE from openai.api-key.cli (which is for personal CLI use in CLI vault)
#
# Option 1: 1Password reference (recommended)
# OPENAI_API_KEY=op://MCP Orchestrator/openai.api-key.mcp-orchestrator/credential
#
# Option 2: Direct token (less secure, not recommended)
# OPENAI_API_KEY=sk-proj-...
OPENAI_API_KEY=op://MCP Orchestrator/openai.api-key.mcp-orchestrator/credential

# =============================================================================
# Claude API (Optional - Alternative to OpenAI, on back burner)
# =============================================================================
# Get API key: https://console.anthropic.com/settings/keys
# More expensive than OpenAI (~2-20x depending on model)
# Consider for complex reasoning or long context tasks
#
# 1Password item: claude.api-key.mcp-orchestrator (in MCP Orchestrator vault, not yet created)
# CLAUDE_API_KEY=op://MCP Orchestrator/claude.api-key.mcp-orchestrator/credential

# =============================================================================
# Orchestrator Settings
# =============================================================================
NODE_ENV=development
LOG_LEVEL=info
PORT=3000

# Sync intervals (milliseconds)
SYNC_INTERVAL_NOTION=300000      # 5 minutes
SYNC_INTERVAL_TODOIST=180000     # 3 minutes

# AI tagging settings
AI_TAGGING_ENABLED=true
AI_MODEL=gpt-4                   # or claude-3-5-sonnet

# Agent delegation settings
AGENT_DELEGATION_ENABLED=true
AGENT_TRIGGER_TAGS=research,code,summary

# =============================================================================
# Optional: Tailscale (for remote webhooks)
# =============================================================================
# Get from: tailscale status
# TAILSCALE_IP=${TAILSCALE_IP}

# =============================================================================
# Optional: Sentry (error tracking)
# =============================================================================
# SENTRY_DSN=${SENTRY_DSN}
